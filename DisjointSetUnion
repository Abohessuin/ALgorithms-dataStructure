struct UnionFind
{
   vector<int>rankk;
   vector<int>parent;
   int forests;
   UnionFind(int n)
   {
       rankk=vector<int>(n+1);
       parent=vector<int>(n+1);
       loop(n)
       {
           parent[i]=i;
           rankk[i]=1;
       }

   }

   int find_set(int x)
   {
       if(x==parent[x]) return x;
       return parent[x]=find_set(parent[x]);
   }

   void link(int x,int y)
   {
       if(rankk[x]>rankk[y])  swap(x,y);
       parent[x]=y;
       if(rankk[x]==rankk[y]) rankk[y]++;
   }

   bool union_sets(int x,int y)
   {
       x=find_set(x),y=find_set(y);
       if(x!=y)
       {
         link(x,y);
         forests--;
       }
       return x!=y;
   }
};
